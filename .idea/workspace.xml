<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="df7f7ffc-a589-4b58-9d8b-cee280c6cb6a" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/scala/ShoppingCart.scala" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/scala/ShoppingCart.scala" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/scala/TestingShoppingCart.scala" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/scala/TestingShoppingCart.scala" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectId" id="2MaGm9b5vAECUOW248M6JyDSdBi" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/shopDemo&quot;
  }
}</component>
  <component name="RunManager" selected="ScalaTest.TestingShoppingCart.ShoppingCart should be able to count apples">
    <configuration name="TestingShoppingCart" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="shop" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Class" />
      <option name="testClassPath" value="TestingShoppingCart" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestingShoppingCart.ShoppingCart should be able to add item" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="shop" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="TestingShoppingCart" />
      <option name="testName" value="ShoppingCart should be able to add item" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestingShoppingCart.ShoppingCart should be able to count apples" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="shop" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="TestingShoppingCart" />
      <option name="testName" value="ShoppingCart should be able to count apples" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestingShoppingCart.ShoppingCart should be empty in the start" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="shop" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="TestingShoppingCart" />
      <option name="testName" value="ShoppingCart should be empty in the start" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestingShoppingCart.ShoppingCart should count the items correctly&#10;ShoppingCart should be able to count apples&#10;ShoppingCart should be able to count oranges&#10;ShoppingCart should calculate the total discount amount correctly&#10;ShoppingCart should calculate the total cost after discount at checkout" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="shop" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="TestingShoppingCart" />
      <option name="testName" value="ShoppingCart should count the items correctly&#10;ShoppingCart should be able to count apples&#10;ShoppingCart should be able to count oranges&#10;ShoppingCart should calculate the total discount amount correctly&#10;ShoppingCart should calculate the total cost after discount at checkout" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="ScalaTest.TestingShoppingCart.ShoppingCart should be able to count apples" />
        <item itemvalue="ScalaTest.TestingShoppingCart.ShoppingCart should count the items correctly&#10;ShoppingCart should be able to count apples&#10;ShoppingCart should be able to count oranges&#10;ShoppingCart should calculate the total discount amount correctly&#10;ShoppingCart should calculate the total cost after discount at checkout" />
        <item itemvalue="ScalaTest.TestingShoppingCart" />
        <item itemvalue="ScalaTest.TestingShoppingCart.ShoppingCart should be able to add item" />
        <item itemvalue="ScalaTest.TestingShoppingCart.ShoppingCart should be empty in the start" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="df7f7ffc-a589-4b58-9d8b-cee280c6cb6a" name="Changes" comment="" />
      <created>1677998441520</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1677998441520</updated>
    </task>
    <servers />
  </component>
</project>